from django.shortcuts import render
from django.http import HttpResponse, HttpResponseRedirect
from .forms import *
import hashlib

#—Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ö—Ä–∞–Ω—è—Ç—å—Å—è –ø–æ –∞–¥—Ä–µ—Å—É NewsSite\Main\site_pages
# —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç - login: AMOGUS pass:  9E6-rH9-Ad9-FE6

def registration_page(request):
    if request.method == 'GET':
        return render(request, 'reg.html', { 'reg': RegForm() })
    elif request.method == 'POST':
        regform = RegForm(request.POST)
        if regform.is_valid():
            try:
                User_count = Users.objects.filter(Login =regform.cleaned_data['Login']).count()
                if User_count > 0:
                    return render(request, 'reg.html', {'reg': RegForm(), 'error': '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º Login —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ, –Ω–µ –≤–∑–ª–∞–º—ã–≤–∞–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–±–æ—Ä–æ–º –ø–∞—Ä–æ–ª–µ–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üòè!!!'})
                else:
                    user = Users()
                    user.email = regform.cleaned_data['email']
                    user.Login = regform.cleaned_data['Login']
                    user.password = hashlib.sha256(bytes(regform.cleaned_data['password'], 'utf-8')).hexdigest()
                    user.save()
            except:
                return render(request, 'reg.html', { 'reg': RegForm(), 'error': '—É–ø—Å, –≥–¥–µ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–æ—á–∫–∞ üò®'} )
        return HttpResponse('–í—ã —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã üòé')

def login_page(request):
    if request.method == 'GET':
        return render(request, 'login.html', {'login': LoginFrom()})
    elif request.method == 'POST':
        loginform = LoginFrom(request.POST)
        if loginform.is_valid():
            try:
                login = loginform.cleaned_data['Login']
                password = hashlib.sha256(bytes(loginform.cleaned_data['password'], 'utf-8')).hexdigest()
                print(password)
                User_count = Users.objects.filter(Login=login, password=password)

                if len(User_count) > 0:
                    print(User_count[0])
                    return HttpResponse(f'–∞–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç üçµ —Å –ª–æ–≥–∏–Ω–æ–º {login} –∏ –ø–∞—Ä–æ–ª–µ–º {password} üçµ')
                else:
                    return render(request, 'login.html', {'login': LoginFrom(), 'error': '—Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç Ô∏èüêíÔ∏è –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π üêíÔ∏è'})
            except Exception as ex:
                template = "An exception of type {0} occurred. Arguments:\n{1!r}"
                message = template.format(type(ex).__name__, ex.args)
                print(message)

                return render(request, 'login.html', {'login': LoginFrom(), 'error': '—É–ø—Å, –≥–¥–µ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–æ—á–∫–∞ ‚òï'})
    return HttpResponse('–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ üï∑üï∏')

def index(request):
    # return HttpResponse('hello page')
    return render(request, 'main_page.html')
    # return render(request, 'test.html')